/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { MerkleRoyalties } from "./MerkleRoyalties";

export class MerkleRoyaltiesFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<MerkleRoyalties> {
    return super.deploy(overrides || {}) as Promise<MerkleRoyalties>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): MerkleRoyalties {
    return super.attach(address) as MerkleRoyalties;
  }
  connect(signer: Signer): MerkleRoyaltiesFactory {
    return super.connect(signer) as MerkleRoyaltiesFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): MerkleRoyalties {
    return new Contract(address, _abi, signerOrProvider) as MerkleRoyalties;
  }
}

const _abi = [
  {
    inputs: [
      {
        internalType: "address[]",
        name: "_tokens",
        type: "address[]",
      },
      {
        internalType: "bytes32[][]",
        name: "_proofs",
        type: "bytes32[][]",
      },
      {
        internalType: "uint256[]",
        name: "_splitPoints",
        type: "uint256[]",
      },
    ],
    name: "claim",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "contractBalance",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "lastClaimed",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    stateMutability: "payable",
    type: "receive",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610a50806100206000396000f3fe6080604052600436106100385760003560e01c806305141cd014610068578063c2a1c3d9146100af578063c53b7702146100d157600080fd5b3661006357336000908152600160205260408120805434929061005c90849061094d565b9091555050005b600080fd5b34801561007457600080fd5b5061009d6100833660046107c1565b600060208181529281526040808220909352908152205481565b60405190815260200160405180910390f35b3480156100bb57600080fd5b506100cf6100ca3660046107f4565b6100fe565b005b3480156100dd57600080fd5b5061009d6100ec36600461079f565b60016020526000908152604090205481565b81518351148015610110575080518351145b61014b5760405162461bcd60e51b8152602060048201526007602482015266042d8cadccee8d60cb1b60448201526064015b60405180910390fd5b6000805b84518110156104d057600085828151811061016c5761016c6109ee565b60200260200101519050600084838151811061018a5761018a6109ee565b6020908102919091018101516001600160a01b0384166000818152808452604080822033835285528082205481516313b8d89760e11b8152915194965087959094929392632771b12e926004808201939291829003018186803b1580156101f057600080fd5b505afa158015610204573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061022891906108df565b905080821061026b5760405162461bcd60e51b815260206004820152600f60248201526e185b1c9958591e4818db185a5b5959608a1b6044820152606401610142565b604080513360601b6bffffffffffffffffffffffff19166020808301919091526034808301889052835180840390910181526054909201909252805191012061033e908a88815181106102c0576102c06109ee565b6020026020010151856001600160a01b03166309063af66040518163ffffffff1660e01b815260040160206040518083038186803b15801561030157600080fd5b505afa158015610315573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061033991906108df565b610561565b6103815760405162461bcd60e51b815260206004820152601460248201527324b73b30b634b21036b2b935b63290383937b7b360611b6044820152606401610142565b60006001600160a01b03841663e732887361039d85600161094d565b846040518363ffffffff1660e01b81526004016103c4929190918252602082015260400190565b60206040518083038186803b1580156103dc57600080fd5b505afa1580156103f0573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061041491906108df565b9050816000808d8a8151811061042c5761042c6109ee565b6020908102919091018101516001600160a01b03168252818101929092526040908101600090812033825290925281209190915561271061046d8784610987565b6104779190610965565b6001600160a01b0388166000908152600160205260408120805492935083929091906104a49084906109a6565b909155506104b49050818a61094d565b98505050505050505080806104c8906109bd565b91505061014f565b50604051600090339083908381818185875af1925050503d8060008114610513576040519150601f19603f3d011682016040523d82523d6000602084013e610518565b606091505b505090508061055a5760405162461bcd60e51b815260206004820152600e60248201526d18dbdd5b19081b9bdd081cd95b9960921b6044820152606401610142565b5050505050565b600061056e838386610576565b949350505050565b600081815b855181101561061a576000868281518110610598576105986109ee565b602002602001015190508083116105da576040805160208101859052908101829052606001604051602081830303815290604052805190602001209250610607565b60408051602081018390529081018490526060016040516020818303038152906040528051906020012092505b5080610612816109bd565b91505061057b565b509092149392505050565b80356001600160a01b038116811461063c57600080fd5b919050565b600082601f83011261065257600080fd5b8135602061066761066283610929565b6108f8565b82815281810190858301600585811b8801850189101561068657600080fd5b60005b8681101561072457823567ffffffffffffffff8111156106a857600080fd5b8901603f81018b136106b957600080fd5b8681013560406106cb61066283610929565b808382528a820191508285018f84868a1b88010111156106ea57600080fd5b600095505b8486101561070d578035835260019590950194918b01918b016106ef565b508952505050948601945091850191600101610689565b509198975050505050505050565b600082601f83011261074357600080fd5b8135602061075361066283610929565b80838252828201915082860187848660051b890101111561077357600080fd5b60005b8581101561079257813584529284019290840190600101610776565b5090979650505050505050565b6000602082840312156107b157600080fd5b6107ba82610625565b9392505050565b600080604083850312156107d457600080fd5b6107dd83610625565b91506107eb60208401610625565b90509250929050565b60008060006060848603121561080957600080fd5b833567ffffffffffffffff8082111561082157600080fd5b818601915086601f83011261083557600080fd5b8135602061084561066283610929565b8083825282820191508286018b848660051b890101111561086557600080fd5b600096505b8487101561088f5761087b81610625565b83526001969096019591830191830161086a565b50975050870135925050808211156108a657600080fd5b6108b287838801610641565b935060408601359150808211156108c857600080fd5b506108d586828701610732565b9150509250925092565b6000602082840312156108f157600080fd5b5051919050565b604051601f8201601f1916810167ffffffffffffffff8111828210171561092157610921610a04565b604052919050565b600067ffffffffffffffff82111561094357610943610a04565b5060051b60200190565b60008219821115610960576109606109d8565b500190565b60008261098257634e487b7160e01b600052601260045260246000fd5b500490565b60008160001904831182151516156109a1576109a16109d8565b500290565b6000828210156109b8576109b86109d8565b500390565b60006000198214156109d1576109d16109d8565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220fac25434f7875fcc5a0d83e35c07cd2c8df8392e1fc322173781b485f8e077ab64736f6c63430008070033";
