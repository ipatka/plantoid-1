/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import { Contract, ContractFactory, Overrides } from "@ethersproject/contracts";

import type { OwnerManager } from "./OwnerManager";

export class OwnerManagerFactory extends ContractFactory {
  constructor(signer?: Signer) {
    super(_abi, _bytecode, signer);
  }

  deploy(overrides?: Overrides): Promise<OwnerManager> {
    return super.deploy(overrides || {}) as Promise<OwnerManager>;
  }
  getDeployTransaction(overrides?: Overrides): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  attach(address: string): OwnerManager {
    return super.attach(address) as OwnerManager;
  }
  connect(signer: Signer): OwnerManagerFactory {
    return super.connect(signer) as OwnerManagerFactory;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OwnerManager {
    return new Contract(address, _abi, signerOrProvider) as OwnerManager;
  }
}

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "AddedOwner",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "threshold",
        type: "uint256",
      },
    ],
    name: "ChangedThreshold",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "RemovedOwner",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_threshold",
        type: "uint256",
      },
    ],
    name: "addOwnerWithThreshold",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_threshold",
        type: "uint256",
      },
    ],
    name: "changeThreshold",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "getOwners",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "getThreshold",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "isOwner",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "prevOwner",
        type: "address",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_threshold",
        type: "uint256",
      },
    ],
    name: "removeOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "prevOwner",
        type: "address",
      },
      {
        internalType: "address",
        name: "oldOwner",
        type: "address",
      },
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "swapOwner",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610aaa806100206000396000f3fe608060405234801561001057600080fd5b506004361061007d5760003560e01c8063a0e67e2b1161005b578063a0e67e2b146100d2578063e318b52b146100e7578063e75235b8146100fa578063f8dc5dd91461010b57600080fd5b80630d582f13146100825780632f54bf6e14610097578063694e80c3146100bf575b600080fd5b610095610090366004610959565b61011e565b005b6100aa6100a53660046108b8565b6102ab565b60405190151581526020015b60405180910390f35b6100956100cd366004610983565b6102e6565b6100da61039c565b6040516100b6919061099c565b6100956100f53660046108da565b61048c565b6002546040519081526020016100b6565b61009561011936600461091d565b6106c1565b610126610863565b6001600160a01b0382161580159061014857506001600160a01b038216600114155b801561015d57506001600160a01b0382163014155b6101965760405162461bcd60e51b8152602060048201526005602482015264475332303360d81b60448201526064015b60405180910390fd5b6001600160a01b0382811660009081526020819052604090205416156101e65760405162461bcd60e51b815260206004820152600560248201526411d4cc8c0d60da1b604482015260640161018d565b600060208190527fada5013122d395ba3c54772283fb069b10426056ef8ca54750cb9bb552a59e7d80546001600160a01b03858116808552604085208054929093166001600160a01b0319928316179092556001808552835490911690911790915580549161025483610a17565b90915550506040516001600160a01b03831681527f9465fa0c962cc76958e6373a993326400c1c94f8be2fe3a952adfa7f60b2ea269060200160405180910390a180600254146102a7576102a7816102e6565b5050565b60006001600160a01b0382166001148015906102e057506001600160a01b038281166000908152602081905260409020541615155b92915050565b6102ee610863565b6001548111156103285760405162461bcd60e51b8152602060048201526005602482015264475332303160d81b604482015260640161018d565b60018110156103615760405162461bcd60e51b815260206004820152600560248201526423a999181960d91b604482015260640161018d565b60028190556040518181527f610f7ff2b304ae8903c3de74c60c6ab1f7d6226b3f52c5161905bb5ad4039c939060200160405180910390a150565b6060600060015467ffffffffffffffff8111156103bb576103bb610a5e565b6040519080825280602002602001820160405280156103e4578160200160208202803683370190505b506001600090815260208190527fada5013122d395ba3c54772283fb069b10426056ef8ca54750cb9bb552a59e7d54919250906001600160a01b03165b6001600160a01b038116600114610484578083838151811061044557610445610a48565b6001600160a01b03928316602091820292909201810191909152918116600090815291829052604090912054168161047c81610a17565b925050610421565b509092915050565b610494610863565b6001600160a01b038116158015906104b657506001600160a01b038116600114155b80156104cb57506001600160a01b0381163014155b6104ff5760405162461bcd60e51b8152602060048201526005602482015264475332303360d81b604482015260640161018d565b6001600160a01b03818116600090815260208190526040902054161561054f5760405162461bcd60e51b815260206004820152600560248201526411d4cc8c0d60da1b604482015260640161018d565b6001600160a01b0382161580159061057157506001600160a01b038216600114155b6105a55760405162461bcd60e51b8152602060048201526005602482015264475332303360d81b604482015260640161018d565b6001600160a01b038381166000908152602081905260409020548116908316146105f95760405162461bcd60e51b8152602060048201526005602482015264475332303560d81b604482015260640161018d565b6001600160a01b03828116600081815260208181526040808320805487871680865283862080549289166001600160a01b0319938416179055968a1685528285208054821690971790965592849052825490941690915591519081527ff8d49fc529812e9a7c5c50e69c20f0dccc0db8fa95c98bc58cc9a4f1c1299eaf910160405180910390a16040516001600160a01b03821681527f9465fa0c962cc76958e6373a993326400c1c94f8be2fe3a952adfa7f60b2ea269060200160405180910390a1505050565b6106c9610863565b80600180546106d891906109e9565b101561070e5760405162461bcd60e51b8152602060048201526005602482015264475332303160d81b604482015260640161018d565b6001600160a01b0382161580159061073057506001600160a01b038216600114155b6107645760405162461bcd60e51b8152602060048201526005602482015264475332303360d81b604482015260640161018d565b6001600160a01b038381166000908152602081905260409020548116908316146107b85760405162461bcd60e51b8152602060048201526005602482015264475332303560d81b604482015260640161018d565b6001600160a01b03828116600081815260208190526040808220805488861684529183208054929095166001600160a01b0319928316179094559181528254909116909155600180549161080b83610a00565b90915550506040516001600160a01b03831681527ff8d49fc529812e9a7c5c50e69c20f0dccc0db8fa95c98bc58cc9a4f1c1299eaf9060200160405180910390a1806002541461085e5761085e816102e6565b505050565b33301461089a5760405162461bcd60e51b8152602060048201526005602482015264475330333160d81b604482015260640161018d565b565b80356001600160a01b03811681146108b357600080fd5b919050565b6000602082840312156108ca57600080fd5b6108d38261089c565b9392505050565b6000806000606084860312156108ef57600080fd5b6108f88461089c565b92506109066020850161089c565b91506109146040850161089c565b90509250925092565b60008060006060848603121561093257600080fd5b61093b8461089c565b92506109496020850161089c565b9150604084013590509250925092565b6000806040838503121561096c57600080fd5b6109758361089c565b946020939093013593505050565b60006020828403121561099557600080fd5b5035919050565b6020808252825182820181905260009190848201906040850190845b818110156109dd5783516001600160a01b0316835292840192918401916001016109b8565b50909695505050505050565b6000828210156109fb576109fb610a32565b500390565b600081610a0f57610a0f610a32565b506000190190565b6000600019821415610a2b57610a2b610a32565b5060010190565b634e487b7160e01b600052601160045260246000fd5b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052604160045260246000fdfea2646970667358221220d62a3e342823692560e58ae14114e97055494fe045328adb12dec00f42cc1ccc64736f6c63430008070033";
